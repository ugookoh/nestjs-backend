import {
  Column,
  Entity,
  JoinTable,
  ManyToMany,
  PrimaryGeneratedColumn,
} from 'typeorm';
import { Field, Int, ObjectType } from '@nestjs/graphql';
import { Product } from '../../product/entities';

@Entity('user')
@ObjectType()
export class User {
  @PrimaryGeneratedColumn('uuid', { name: 'user_id' })
  @Field({ description: 'This is an autogenerated id' })
  id: string;

  @Column()
  @Field()
  name: string;

  @Column()
  @Field()
  email: string;

  @Column()
  @Field((type) => Int)
  age: number;

  @ManyToMany(() => Product, (product) => product.user)
  @JoinTable({
    name: 'user_product',
    joinColumn: {
      name: 'user_id',
      referencedColumnName: 'id',
    },
    inverseJoinColumn: {
      name: 'product_id',
      referencedColumnName: 'id',
    },
  })
  @Field((type) => [Product], { nullable: true })
  order: Product[];
}
